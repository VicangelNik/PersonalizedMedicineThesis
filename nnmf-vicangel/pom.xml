<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nikiforos.non.negative.matrix.factorization</groupId>
	<artifactId>nnmf-vicangel</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<dependencies>
		<!-- For junit test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>
		<!-- For non negative matrix factorization -->
		<dependency>
			<groupId>org.du-lab.javanmf</groupId>
			<artifactId>javanmf</artifactId>
			<version>0.1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.7</version>
		</dependency>
		<!-- library with many algorithms like isomap -->
		<dependency>
			<groupId>com.github.haifengl</groupId>
			<artifactId>smile-core</artifactId>
			<version>1.5.3</version>
		</dependency>
		<!-- SLF4J: Failed to load class “org.slf4j.impl.StaticLoggerBinder” the 
			site: https://www.slf4j.org/ -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>2.0.0-alpha0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.fommil.netlib</groupId>
			<artifactId>all</artifactId>
			<version>1.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<!-- OpenCSV library site: https://mvnrepository.com/artifact/com.opencsv/opencsv/4.6 -->
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>4.6</version>
		</dependency>
		<dependency>
			<!-- google library -->
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>28.1-jre</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/nz.ac.waikato.cms.weka/weka-stable -->
		<dependency>
			<!-- weka library -->
			<groupId>nz.ac.waikato.cms.weka</groupId>
			<artifactId>weka-stable</artifactId>
			<version>3.8.3</version>
		</dependency>
		<dependency>
			<groupId>org.scify</groupId>
			<artifactId>EMPCA</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<!-- multiLayerPerceptrons -->
		<dependency>
			<groupId>nz.ac.waikato.cms.weka</groupId>
			<artifactId>multiLayerPerceptrons</artifactId>
			<version>1.0.10</version>
		</dependency>
		<dependency>
			<groupId>nz.ac.waikato.cms.weka</groupId>
			<artifactId>wekaDeeplearning4j</artifactId>
			<version>1.5.14</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.python/jython -->
		<dependency>
			<groupId>org.python</groupId>
			<artifactId>jython-standalone</artifactId>
			<version>2.7.2</version>
		</dependency>
		<!-- The type org.deeplearning4j.nn.conf.layers.OutputLayer cannot be resolved. 
			It is indirectly referenced from required .class files -->
		<!-- Version 1.0.0-beta5 is chosen because -> ND4J VERSION CHECK FAILED 
			- INCOMPATIBLE VERSIONS FOUND -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-nn</artifactId>
			<version>1.0.0-beta5</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.7.0-M1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<!-- maven-compiler-plugin which allows you to set the Java version for 
					your project. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.0</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<!-- Resolve error: unmappable character for encoding Cp1253 -->
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<!-- This plugin compiles Scala files -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>scala-compile-first</id>
							<phase>process-resources</phase>
							<goals>
								<goal>add-source</goal>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>scala-test-compile</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
